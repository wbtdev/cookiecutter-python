[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
bandit = "*"
coveragespace = "*"
cruft = "*"
hypothesis = "*"
isort = "*"
portray = "*"
pytest = "*"
pytest-check = "*"
pytest-cov = "*"
pytest-mock = "*"
safety = "*"
tox = "*"
typing = "*"
vulture = "*"

[tool.isort]
line_length = 88
indent = '    '
skip = [
    ".tox",
    "build",
    "dist"
]
known_standard_library = [
    "StringIO"
]
known_test = [
    "pytest"
]
known_first_party = [
    "{{cookiecutter.project_name}}"
]
multi_line_output = 3

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_errors = false
ignore_missing_imports = true
no_implicit_optional = true
strict_optional = true
show_column_numbers = true
warn_no_return = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true

[mypy-pytest."*"]
ignore_missing_imports = true

[mypy-parser."*"]
ignore_missing_imports = true

[tool.pytest]
addopts = "-rw"
norecursedirs = [
    ".git",
    ".*",
    "*.egg*",
    "old",
    "docs",
    "dist",
    "build"
]
bdd_features_base_dir = "tests/features/"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning"
]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
